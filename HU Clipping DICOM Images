{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOIe19qMkFm7VWF9xfgnA5V"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"_q7lgwke3J4G"},"outputs":[],"source":["from pydicom import dcmread\n","from pydicom.pixel_data_handlers.util import apply_modality_lut\n","import numpy as np\n","from PIL import Image\n","import matplotlib.pyplot as plt\n","\n","for i in range(len(Original_Image_Path)):\n","    ds = dcmread(Original_Image_Path[i])\n","    arr = ds.pixel_array  # Raw unitless pixel data\n","    hu = apply_modality_lut(arr, ds)  # Pixel data has been converted to HU (for CT)\n","\n","    # Clip values outside the range to the min/max of the range\n","    clipped_hu = np.clip(hu, -200, 200)\n","    im = Image.fromarray(clipped_hu)\n","\n","    #plt.imshow(im)\n","    if im.mode != 'RGB':\n","        im = im.convert('RGB')\n","\n","    dest_name = Original_Image_Path[i][16:]\n","    dest_name = dest_name.replace('.dcm', '.jpg')\n","    #print(dest_name)\n","    #break\n","    im.save('HU_Clipped_Images' + '/' + dest_name)"]}]}